# Generated by Django 3.2.7 on 2021-10-15 10:56

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Concert',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=512, verbose_name='concert title')),
                ('description', models.TextField(blank=True, default=None, null=True, verbose_name='concert description')),
                ('start_date_time', models.DateTimeField(verbose_name='concert start date time')),
                ('end_date_time', models.DateTimeField(blank=True, default=None, null=True, verbose_name='concert end date time if required')),
                ('status', models.CharField(choices=[('EventCancelled', 'Отменен'), ('EventMovedOnline', 'Перенесен в онлайн'), ('EventPostponed', 'Перенесен, новая дата будет назначена позже'), ('EventRescheduled', 'Перенесен'), ('EventScheduled', '')], default='EventScheduled', max_length=16, verbose_name='status')),
                ('place_name', models.CharField(max_length=255, verbose_name='place name')),
                ('place_address', models.CharField(max_length=255, verbose_name='address of place')),
                ('place_url', models.URLField(blank=True, default=None, null=True, verbose_name='url to place page')),
                ('place_description', models.CharField(blank=True, max_length=255, null=True, verbose_name='place description')),
                ('performer', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='artists')),
                ('organizer', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='organizer')),
                ('image', models.ImageField(blank=True, default=None, null=True, upload_to='concert_images', verbose_name='concert image')),
                ('page_template', models.TextField(default='<p>Добавьте страницу концерта</p>', verbose_name='template to show concert page')),
                ('email_template', models.TextField(default='<p>Добавьте страницу email</p>', verbose_name='template for email with tickets')),
                ('promo_email_template', models.TextField(blank=True, default=None, null=True, verbose_name='promo email template')),
                ('max_tickets_count', models.IntegerField(blank=True, default=None, null=True, verbose_name='максимальное количество билетов')),
                ('yandex_notification_secret', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='yandex notification secret')),
            ],
        ),
        migrations.CreateModel(
            name='Price',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.FloatField(verbose_name='price of ticket')),
                ('currency', models.CharField(choices=[('RUB', 'рубль'), ('EUR', 'евро'), ('USD', 'доллар'), ('GBP', 'британский фунт')], default='RUB', max_length=3, verbose_name='price currency')),
                ('description', models.CharField(max_length=255, verbose_name='price description')),
                ('is_active', models.BooleanField(default=True, verbose_name='price active')),
                ('max_count', models.IntegerField(blank=True, default=None, verbose_name='price max tickets')),
                ('concert', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='concert.concert', verbose_name='the related concert')),
            ],
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_done', models.BooleanField(default=False)),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='date time created')),
                ('date_closed', models.DateTimeField(default=None, null=True, verbose_name='date close')),
                ('amount_sum', models.FloatField(default=None, null=True, verbose_name='amount sum')),
                ('concert', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='concert.concert', verbose_name='the related concert')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='the related user')),
            ],
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(max_length=6, unique=True, verbose_name='ticket number')),
                ('is_active', models.BooleanField(default=True, verbose_name='is ticket valid')),
                ('price', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='concert.price', verbose_name='the related price')),
                ('transaction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='concert.transaction', verbose_name='the related transaction')),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(blank=True, default=None, help_text='Контактный телефон', max_length=128, null=True, region=None, verbose_name="user's phone")),
                ('accept_mailing', models.BooleanField(default=True, verbose_name='mailings allow lists')),
                ('telegram_id', models.IntegerField(blank=True, default=None, null=True, verbose_name='telegram user id for staff users')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='the related user')),
            ],
        ),
        migrations.CreateModel(
            name='ConcertImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('caption', models.CharField(max_length=255, verbose_name='alt text for image')),
                ('image', models.ImageField(upload_to='concert_page_images', verbose_name='image')),
                ('concert', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='concert.concert', verbose_name='the related concert')),
            ],
        ),
    ]
